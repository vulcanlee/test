@page "/AgePropertyChanged"
@using System.ComponentModel.DataAnnotations

<h1>在 Blazor 使用 DOM 事件，設計屬性變更的需求</h1>
<h2>AgePropertyChanged</h2>
<div class="form-group">
    <label for="FirstName">名</label>
    <input id="FirstName" class="form-control" @bind="MyPerson.FirstName" />
</div>
<div class="form-group">
    <label for="LastName">姓</label>
    <input id="LastName" class="form-control" @bind="MyPerson.LastName" />
</div>
<div class="form-group">
    <label for="Age">年紀</label>


    @*底下的用法，將會造成建置時期產生錯誤，錯誤訊息如下
        The attribute 'oninput' is used two or more times for this element.
        Attributes must be unique (case-insensitive).
        The attribute 'oninput' is used by the '@bind' directive attribute.*@
    @*<input type="number" id="Age" class="form-control"
        @bind="MyPerson.Age" @bind:event="oninput"
        @oninput="@(x=>AgeChanged())" />*@


    @*底下的用法將會造成執行時期運作不正確，讀者可以自行體驗看看*@
    @*<input type="number" id="Age" class="form-control"
        @bind="MyPerson.Age"
        @oninput="@(x=>AgeChanged())" />*@


    <input type="number" id="Age" class="form-control"
           value="@MyPerson.Age"
           @oninput="@(x=>OnAge(x))" />
</div>

<button type="submit" class="btn btn-primary" disabled="@IsDisabled">Submit</button>

<div class="text-danger">
    @MyPerson.Age
</div>
<div class="text-danger">
    @AgeRange
</div>

@code{
    void OnAge(ChangeEventArgs e)
    {
        try
        {
            MyPerson.Age = Convert.ToInt32(e.Value);
        }
        catch { }
        AgeChanged();
    }

    class Person
    {
        [Required(ErrorMessage = "欄位 名，不可為空白")]
        public string FirstName { get; set; }
        [Required(ErrorMessage = "欄位 姓，不可為空白")]
        public string LastName { get; set; }
        [Range(0, 99, ErrorMessage = "年紀數值不正確")]
        public int Age { get; set; }
    }

    Person MyPerson = new Person();
    bool IsDisabled = true;
    string AgeRange = "";

    void AgeChanged()
    {
        if (MyPerson.Age < 13)
        {
            AgeRange = "你是小朋友";
            IsDisabled = true;
        }
        else if (MyPerson.Age < 20)
        {
            AgeRange = "你是年青人";
            IsDisabled = false;
        }
        else if (MyPerson.Age < 28)
        {
            AgeRange = "你是青年人";
            IsDisabled = false;
        }
        else
        {
            AgeRange = "你是成年人";
            IsDisabled = false;
        }
        StateHasChanged();
    }
}
